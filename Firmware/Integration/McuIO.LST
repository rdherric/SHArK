C51 COMPILER V8.18   MCUIO                                                                 01/09/2011 12:30:01 PAGE 1   


C51 COMPILER V8.18, COMPILATION OF MODULE MCUIO
OBJECT MODULE PLACED IN McuIO.OBJ
COMPILER INVOKED BY: C:\SiLabs\MCU\IDEfiles\C51\BIN\C51.exe McuIO.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // McuIO.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) RDH2 Science, LLC
   5          // http://www.rdh2.com
   6          //
   7          // McuIO.c contains the functionality required to communicate
   8          // with the MCU chip for the base operations.
   9          //
  10          // Target:         C8051F32x
  11          // Tool chain:     Keil compiler
  12          // Command Line:   None
  13          //
  14          // Release 1.0 / Not Released
  15          //    -Initial Revision
  16          
  17          
  18          //-----------------------------------------------------------------------------
  19          // Includes
  20          //-----------------------------------------------------------------------------
  21          #include <compiler_defs.h>
  22          #include <C8051F320_defs.h>
  23          #include "Main.h"
  24          #include "McuIO.h"
  25          #include "Registers.h"
  26          #include "SpiIO.h"
  27          
  28          
  29          //-----------------------------------------------------------------------------
  30          // Extern Global Variables
  31          //-----------------------------------------------------------------------------
  32          extern U16 delay;
  33          
  34          
  35          //-----------------------------------------------------------------------------
  36          // InitSYSCLK
  37          //-----------------------------------------------------------------------------
  38          //
  39          // Return Value: none
  40          // Parameters:   none
  41          //
  42          // This routine initializes the system clock to 24 MHz and the USB clock to
  43          // 48 MHz (USB 2.0 requirement).  The 4x clock multiplier is employed, so
  44          // the USB clock is 12 MHz * 4 = 48 MHz.  The system clock is set to the 4x
  45          // oscillator divided by 2, 12 MHz * 4 / 2 = 24 MHz.  Also enables missing
  46          // clock detector reset (required for this setup).
  47          //
  48          // This setup was verified by blinking an LED using the 16-bit TIMER2 and a
  49          // loop that ran 10 times.  TIMER2 was run from the system clock / 12.
  50          // Blink Period =  10 * 2^16 / (24 MHz / (2*12)) = 0.655 s
  51          // (Factor of 2 for two cycles per blink period.)
  52          //
  53          //-----------------------------------------------------------------------------
  54          void InitSYSCLK(void)
  55          {
C51 COMPILER V8.18   MCUIO                                                                 01/09/2011 12:30:01 PAGE 2   

  56   1              // Configure internal oscillator
  57   1              OSCICN = 0x83;
  58   1      
  59   1              // Set up clock multiplier to allow for a 48 MHz USB clock:
  60   1              // Reset clock multiplier
  61   1              CLKMUL = 0x00;
  62   1      
  63   1              // Enable multiplier
  64   1              CLKMUL |= 0x80;
  65   1      
  66   1              // Delay for >5us (12MHz * 20ps = 240 clock cycles)
  67   1              delay = 0;
  68   1              while (delay < 300) 
  69   1                      { delay++; }
  70   1      
  71   1              // Initialize multiplier
  72   1              CLKMUL |= 0xC0;
  73   1      
  74   1              // Poll for multiplier ready
  75   1              while ((CLKMUL & MULRDY) != MULRDY) { NOP(); }
  76   1      
  77   1              // USB clock = 4*(Int Osc)
  78   1              // Sys clock = 4*(Int Osc)/2
  79   1              CLKSEL = 0x02;
  80   1                                                      
  81   1              // Enable missing clock detector, required for USB
  82   1              RSTSRC = 0x04;
  83   1      }
  84          
  85          
  86          
  87          
  88          //-----------------------------------------------------------------------------
  89          // InitPORT
  90          //-----------------------------------------------------------------------------
  91          //
  92          // Return Value: none
  93          // Parameters:   none
  94          //
  95          // Configure the Crossbar and GPIO ports.
  96          //
  97          // P0.0 - SCK (SPI)
  98          // P0.1 - MISO (SPI)
  99          // P0.2 - MOSI (SPI)
 100          // P0.3 - Motor 2 Direction (Stepper Motor Driver)
 101          // P0.4 - Motor 2 Step (Stepper Motor Driver)
 102          // P0.5 - Not Driver Enable (Stepper Motor Driver)
 103          // P0.6 - Motor 1 Direction (Stepper Motor Driver)
 104          // P0.7 - Motor 1 Step (Stepper Motor Driver)
 105          // P1.0 - In TTL
 106          // P1.1 - Out TTL
 107          // P1.2 - Laser Power On/Off
 108          // P1.3 - N/C
 109          // P1.4 - Not DAC CS (SPI)
 110          // P1.5 - N/C
 111          // P1.6 - N/C
 112          // P1.7 - Calibration (logical)
 113          // P2.0 - Positive Current (logical)
 114          // P2.1 - Not ADC CS (SPI)
 115          // P2.2 - N/C (LED, push-pull, temporary for testing purposes)
 116          // P2.3 - Output Enable
 117          // P2.4 - N/C
C51 COMPILER V8.18   MCUIO                                                                 01/09/2011 12:30:01 PAGE 3   

 118          // P2.5 - N/C
 119          // P2.6 - Not RAM CS (SPI)
 120          // P2.7 - Not RAM Hold
 121          // P3.0 - N/C
 122          //
 123          //-----------------------------------------------------------------------------
 124          void InitPORT(void)
 125          {
 126   1              // Set all port pins as NOT analog inputs.
 127   1              P0MDIN = 0xFF;
 128   1              P1MDIN = 0xFF;
 129   1              P2MDIN = 0xFF;
 130   1              P3MDIN = 0xFF;
 131   1      
 132   1              // Select push/pull for all port pins
 133   1              P0MDOUT = 0xFD;                 // 1111 1101
 134   1              P1MDOUT = 0xFF;
 135   1              P2MDOUT = 0xFF;
 136   1              P3MDOUT = 0xFF;
 137   1      
 138   1              // Select MISO for Digital In
 139   1              P0 = 0x02;                              // 0000 0010
 140   1      
 141   1              // Select pins to be skipped by port crossbar
 142   1              P0SKIP = 0x00;
 143   1              P1SKIP = 0x00;
 144   1              P2SKIP = 0x00;
 145   1      
 146   1              // Assign port pins to peripherals using the port crossbar (p. 131)
 147   1              // Only SPI selected, automatically assigned:
 148   1              // SCK  --> P0.0
 149   1              // MISO --> P0.1
 150   1              // MOSI --> P0.2
 151   1              XBR0 = 0x02;
 152   1      
 153   1              // Enable crossbar and weak pull-ups
 154   1              XBR1 = 0x40;
 155   1      
 156   1              // Initialize the potentiostat state
 157   1              // 1. the SPI Not Chip Select ports to high (P1.4, P2.1, P2.6)
 158   1              // 2. the stepper motor Not Enable to high (P0.5)
 159   1              // 3. the stepper motors "step" ports to low (P0.4, P0.7)
 160   1              // 4. the laser power low (P1.2)
 161   1              // 5. the Calibration signal to low (P1.7)
 162   1              // 6. the current direction signal Positive to high (P2.0)
 163   1              // 7. the Output Enable to low (P2.3)
 164   1              // 8. the Not RAM Hold to high (P2.7)
 165   1              NADCCS = 1;
 166   1              NDACCS = 1;
 167   1              NRAMCS = 1;
 168   1              NRAMHOLD = 1;
 169   1              NDRIVEREN = 1;                          // Enable/disable (0/1) stepper motor driver
 170   1                                                                      // A 0 causes current from +12 V to flow!
 171   1              LASER = 0;                                      // Disable laser power
 172   1              OUTPUTEN = 0;                           // Disable the output until we're ready
 173   1              CAL = 0;                                        // Not in calibration state
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    104    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V8.18   MCUIO                                                                 01/09/2011 12:30:01 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
